<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.cb.mapper.work.CoverWorkMapper">
    
	<sql id="coverWorkColumns">
		a.id AS "id",
		a.project_id AS "projectId",
		a.project_name AS "projectName",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.cover AS "cover.id",
		a.cover_no AS "coverNo",
		a.cover_bell_id AS "coverBellId",
		a.work_num AS "workNum",
		a.work_type AS "workType",
		a.work_status AS "workStatus",
		a.source AS "source",
		a.construction_content AS "constructionContent",
		a.construction_user AS "constructionUser.id",
		a.phone AS "phone",
		a.construction_depart AS "constructionDepart.id",
		a.work_level AS "workLevel",
		a.create_depart AS "createDepart",
		a.update_depart AS "updateDepart",
		a.remarks AS "remarks",
		a.batch AS "batch",
		a.longitude AS "longitude",
		a.latitude AS "latitude",
		a.flow_id AS "flowId.id",
		a.parent_work_id  AS "parentWorkId.id",
		a.life_cycle AS "lifeCycle",
		a.latest_complete_date AS "latestCompleteDate",
		cover.no AS "cover.no",

		constructionUser.login_name AS "constructionUser.loginName",
		constructionUser.name AS "constructionUser.name",
		constructionUser.mobile AS "constructionUser.mobile",

		createUser.name AS "createBy.name",
		createUser.login_name AS "createBy.loginName",
		createUser.mobile AS "createBy.mobile",

		constructionDepart.name AS "constructionDepart.name",
				
		flowId.flow_no AS "flowId.flowNo",
				
		parentWorkId.work_num AS "parentWorkId.work_num"
	</sql>
	
	<sql id="coverWorkJoins">
		
		LEFT JOIN cover cover ON cover.id = a.cover
		LEFT JOIN sys_user constructionUser ON constructionUser.id = a.construction_user
		LEFT JOIN sys_user createUser ON createUser.id = a.create_by
		LEFT JOIN sys_office constructionDepart ON constructionDepart.id = a.construction_depart
		LEFT JOIN flow_proc flowId ON flowId.id = a.flow_id
		LEFT JOIN cover_work parentWorkId ON parentWorkId.id = a.parent_work_id
	</sql>
	
    
	<select id="get" resultType="CoverWork" >
		SELECT 
			<include refid="coverWorkColumns"/>
		FROM cover_work a
		<include refid="coverWorkJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="getByCoverId" resultType="CoverWork" >
		select a.* from cover_work a where a.del_flag = 0 and a.cover = #{coverId} and
		a.life_cycle  <![CDATA[ <> 'complete']]>
		order by a.create_date desc
		limit 1
	</select>
	
	<select id="findList" resultType="CoverWork" >
		SELECT 
			<include refid="coverWorkColumns"/>
		FROM cover_work a
		<include refid="coverWorkJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="coverNo != null and coverNo != ''">
				AND a.cover_no LIKE 
					<if test="dbName == 'oracle'">'%'||#{coverNo}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{coverNo}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{coverNo},'%')</if>
			</if>
			<if test="workNum != null and workNum != ''">
				AND a.work_num LIKE 
					<if test="dbName == 'oracle'">'%'||#{workNum}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{workNum}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{workNum},'%')</if>
			</if>
			<if test="workType != null and workType != ''">
				AND a.work_type = #{workType}
			</if>
			<if test="workStatus != null and workStatus != ''">
				AND a.work_status = #{workStatus}
			</if>
			<if test="constructionUser != null and constructionUser.id != null and constructionUser.id != ''">
				AND a.construction_user = #{constructionUser.id}
			</if>
			<if test="phone != null and phone != ''">
				AND a.phone LIKE 
					<if test="dbName == 'oracle'">#{phone}||'%'</if>
					<if test="dbName == 'mssql'">#{phone}+'%'</if>
					<if test="dbName == 'mysql'">concat(#{phone},'%')</if>
			</if>
			<if test="constructionDepart != null and constructionDepart.id != null and constructionDepart.id != ''">
				AND a.construction_depart = #{constructionDepart.id}
			</if>
			<if test="workLevel != null and workLevel != ''">
				AND a.work_level = #{workLevel}
			</if>
			<if test="batch != null and batch != ''">
				AND a.batch = #{batch}
			</if>
			<if test="flowId != null and flowId.id != null and flowId.id != ''">
				AND a.flow_id = #{flowId.id}
			</if>
			<if test="parentWorkId != null and parentWorkId.id != null and parentWorkId.id != ''">
				AND a.parent_work_id  = #{parentWorkId.id}
			</if>
			<if test="lifeCycle != null and lifeCycle != ''">
				AND a.life_cycle = #{lifeCycle}
			</if>
			<if test="beginDate!=null">
				AND a.create_date &gt;= #{beginDate}
			</if>
			<if test="endDate!=null">
				AND a.create_date &lt;=#{endDate}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CoverWork" >
		SELECT 
			<include refid="coverWorkColumns"/>
		FROM cover_work a
		<include refid="coverWorkJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO cover_work(
			id,
			project_id,
			project_name,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			cover,
			cover_no,
			cover_bell_id,
			work_num,
			work_type,
			work_status,
			source,
			construction_content,
			construction_user,
			phone,
			construction_depart,
			work_level,
			create_depart,
			update_depart,
			remarks,
			longitude,
			latitude,
			batch,
			flow_id,
			parent_work_id ,
			life_cycle,
			latest_complete_date
		) VALUES (
			#{id},
			#{projectId},
			#{projectName},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{cover.id},
			#{coverNo},
			#{coverBellId},
			#{workNum},
			#{workType},
			#{workStatus},
			#{source},
			#{constructionContent},
			#{constructionUser.id},
			#{phone},
			#{constructionDepart.id},
			#{workLevel},
			#{createDepart},
			#{updateDepart},
			#{remarks},
			#{longitude},
			#{latitude},
			#{batch},
			#{flowId.id},
			#{parentWorkId.id},
			#{lifeCycle},
			#{latestCompleteDate}
		)
	</insert>
	
	<update id="update">
		UPDATE cover_work SET 	
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			cover = #{cover.id},
			cover_no = #{coverNo},
			cover_bell_id = #{coverBellId},
			work_num = #{workNum},
			work_type = #{workType},
			work_status = #{workStatus},
			source = #{source},
			construction_content = #{constructionContent},
			construction_user = #{constructionUser.id},
			phone = #{phone},
			construction_depart = #{constructionDepart.id},
			work_level = #{workLevel},
			create_depart = #{createDepart},
			update_depart = #{updateDepart},
			remarks = #{remarks},
			batch = #{batch},
			flow_id = #{flowId.id},
			parent_work_id  = #{parentWorkId.id},
			life_cycle = #{lifeCycle},
			project_id = #{projectId},
			project_name = #{projectName},
			latest_complete_date = #{latestCompleteDate}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM cover_work
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE cover_work SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="CoverWork" statementType="STATEMENT">
		select a.* FROM cover_work a where ${propertyName} = '${value}'
	</select>

	<select id="queryByParam" resultType="CoverWork" parameterType="java.util.Map" >
		SELECT
		a.id AS "id"
		FROM cover_work a
		 where a.work_status not in('SH','E0','E1')
		 <if test="coverId!=null and coverId!=''">
			 and a.cover= #{coverId}
		 </if>
		<if test="workType!=null and workType!=''">
			and a.work_type= #{workType}
		</if>
		<if test="coverWorkId!=null and coverWorkId!=''">
			and a.id= #{coverWorkId}
		</if>
	</select>


	<select id="coverWorkTableStatistic" parameterType="com.jeeplus.modules.cv.entity.statis.CoverWorkParam" resultType="com.jeeplus.modules.cv.entity.statis.CoverWorkStatisBo">
		SELECT a.work_level AS 'workLevel', COUNT(1) AS 'count'
			FROM cover_work a
			where
		 	a.work_level IN ('normal','urgent','extra')
			<if test="workType!= null and workType!=''">
			AND a.work_type=#{workType}
			</if>
			<if test="lifeCycle!= null and lifeCycle!=''">
			AND a.life_cycle =#{lifeCycle}
			</if>
			<if test="beginDate!=null">
				AND a.create_date &gt;= #{beginDate}
			</if>
		<if test="endDate!=null">
			AND a.create_date &lt;=#{endDate}
			</if>
			AND EXISTS
			(SELECT 1 FROM cover_work_operation b
				WHERE a.id=b.cover_work
				AND b.create_depart IN
				<foreach  item="item" collection="officeList" separator="," open="(" close=")">
					#{item.id}
				</foreach>
			)
			group by a.work_level
	</select>


	<select id="coverWorkLineStatistic" parameterType="com.jeeplus.modules.cv.entity.statis.CoverWorkParam" resultType="com.jeeplus.modules.cv.entity.statis.CoverWorkStatisBo" >
			SELECT
				a.work_type AS 'workType',
				COUNT(1) AS 'count'
				FROM cover_work a
				WHERE
				a.work_level = #{workLevel}
				<if test="lifeCycle!=null and lifeCycle!=''">
					AND a.life_cycle = #{lifeCycle}
				</if>
				<if test="beginDate!=null">
					AND a.create_date &gt;= #{beginDate}
				</if>
				<if test="endDate!=null">
					AND a.create_date &lt;=#{endDate}
				</if>
				AND EXISTS
				(SELECT 1 FROM cover_work_operation b
				WHERE a.id=b.cover_work
				AND b.create_depart IN
				<foreach  item="item" collection="officeList" separator="," open="(" close=")">
					#{item.id}
				</foreach>
				)
				GROUP BY a.work_type
	</select>


	<select id="constructionStatis" parameterType="com.jeeplus.modules.cv.entity.statis.ConstructionStatistics"  resultType="com.jeeplus.modules.cv.entity.statis.CoverWorkStatisBo">

		SELECT
		a.work_level AS 'workLevel',
		COUNT(1) AS 'count'
		FROM cover_work a
		LEFT JOIN cover b ON a.cover = b.id
		WHERE
		a.work_type= #{workType}
		AND EXISTS
		(SELECT 1 FROM cover_work_operation c
		WHERE a.id=c.cover_work
		AND c.create_depart IN
		<foreach  item="item" collection="officeList" separator="," open="(" close=")">
			#{item.id}
		</foreach>
		)
		<if test="lifeCycle!=null and lifeCycle!=''">
			AND a.life_cycle = #{lifeCycle}
		</if>
		<if test="streetTown!=null and streetTown!=''">
			AND b.township = #{streetTown}
		</if>
		<if test="beginDateCreateTime!=null">
			AND a.create_date &gt;= #{beginDateCreateTime}
		</if>
		<if test="endDateCreateTime!=null">
			AND a.create_date &lt;=#{endDateCreateTime}
		</if>
		<if test="beginDateComplete!=null or endDateComplete!=null">
			AND a.life_cycle = 'complete'
			AND EXISTS (
				SELECT 1 FROM cover_work_operation d
				WHERE d.cover_work=a.id
					AND d.operation_type='complete'
				<if test="beginDateComplete!=null">
					AND d.create_date &gt;= #{beginDateComplete}
				</if>
				<if test="endDateComplete!=null">
					AND d.create_date &lt;=#{endDateComplete}
				</if>
			)
		</if>
		GROUP BY a.work_level
	</select>
	<select id="countByBellIdNoComplete" resultType="integer">
		select count(1) from cover_work a where a.del_flag = 0 and a.cover_bell_id = #{bellId} and
		a.life_cycle  <![CDATA[ <> 'complete']]>
	</select>
	<select id="countOfCompleteNoFilter" resultType="integer">
		select count(1) from cover_work a where a.del_flag = 0 and a.construction_user = #{userId} and
		a.life_cycle  <![CDATA[ <> 'complete']]>
	</select>
	<select id="countOfCompleteByCoverIdNoFilter" resultType="integer">
		select count(1) from cover_work a where a.del_flag = 0 and a.cover = #{coverId} and
		a.life_cycle  <![CDATA[ <> 'complete']]>
	</select>
	<select id="countTotal" resultType="integer">
		select count(1) from cover_work a where a.del_flag = 0
	</select>
	<select id="lifeCycleCountSql" resultType="com.jeeplus.modules.cv.vo.CountVo">
		SELECT
			a.life_cycle,
			case a.life_cycle
			when 'notAssign' then '未接单'
			when 'processing' then '进行中'
			when 'waitAudit' then '待审核'
			when 'complete' then '已完成'
			when 'refuse' then '已驳回'
			when 'expire' then '已超期'
			else '未知'
			end as "name",
			count(1) as "value" from cover_work a WHERE a.del_flag=0 GROUP BY a.life_cycle
	</select>
	<select id="workTypeCountSql" resultType="com.jeeplus.modules.cv.vo.CountVo">
		SELECT
			a.work_type,
			case a.work_type
			when 'check' then '巡检工单'
			when 'install' then '安装工单'
			when 'switch_lock' then '开关锁工单'
			when 'biz_alarm' then '报警工单'
			when 'repair' then '修复工单'
			when 'maintain' then '维护工单'
			when 'spot_check' then '抽检工单'
			when 'exception_report' then '异常上报工单'
			else '未知'
			end as "name",
			count(1) as "value" from cover_work a WHERE a.del_flag=0 GROUP BY a.work_type
	</select>
</mapper>