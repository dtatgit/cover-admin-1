<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.cv.mapper.equinfo.CoverDamageMapper">
    
	<sql id="coverDamageColumns">
		a.id AS "id",
		a.cover_id AS "coverId",
		a.damage AS "damage",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.status AS "status"
	</sql>
	
	<sql id="coverDamageJoins">
		
	</sql>
	
    
	<select id="get" resultType="CoverDamage" >
		SELECT 
			<include refid="coverDamageColumns"/>
		FROM cover_damage a
		<include refid="coverDamageJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CoverDamage" >
		SELECT 
			<include refid="coverDamageColumns"/>
		FROM cover_damage a
		<include refid="coverDamageJoins"/>
		<where>
			
			${dataScope}
			<if test="coverId != null and coverId != ''">
				AND a.cover_id = #{coverId}
			</if>
			<if test="damage != null and damage != ''">
				AND a.damage = #{damage}
			</if>
			<if test="createBy != null and createBy.id != null and createBy.id != ''">
				AND a.create_by = #{createBy.id}
			</if>
			<if test="createDate != null and createDate != ''">
				AND a.create_date = #{createDate}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CoverDamage" >
		SELECT 
			<include refid="coverDamageColumns"/>
		FROM cover_damage a
		<include refid="coverDamageJoins"/>
		<where>
			
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO cover_damage(
			id,
			cover_id,
			damage,
			create_by,
			create_date,
			status
		) VALUES (
			#{id},
			#{coverId},
			#{damage},
			#{createBy.id},
			#{createDate},
			#{status}
		)
	</insert>
	
	<update id="update">
		UPDATE cover_damage SET 	
			cover_id = #{coverId},
			damage = #{damage},
			status = #{status}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM cover_damage
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE cover_damage SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="CoverDamage" statementType="STATEMENT">
		select * FROM cover_damage  where ${propertyName} = '${value}'
	</select>
	
</mapper>