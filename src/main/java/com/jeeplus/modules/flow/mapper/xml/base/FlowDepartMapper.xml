<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeeplus.modules.flow.mapper.base.FlowDepartMapper">
    
	<sql id="flowDepartColumns">
		a.id AS "id",
		a.flow_no AS "flowNo",
		a.bill_type AS "billType",
		a.orgid AS "orgId.id",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
				
				
		createBy.name AS "createBy.name",
		orgId.name AS "orgId.name"
	</sql>
	
	<sql id="flowDepartJoins">
		LEFT JOIN sys_user createBy ON createBy.id = a.create_by
		LEFT JOIN sys_office orgId ON orgId.id = a.orgid
	</sql>
	
    
	<select id="get" resultType="FlowDepart" >
		SELECT 
			<include refid="flowDepartColumns"/>
		FROM flow_depart a
		<include refid="flowDepartJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="FlowDepart" >
		SELECT 
			<include refid="flowDepartColumns"/>
		FROM flow_depart a
		<include refid="flowDepartJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
			<if test="flowNo != null and flowNo != ''">
				AND a.flow_no = #{flowNo}
			</if>
			<if test="orgId != null and orgId.id != null and orgId.id != ''">
				AND a.orgid = #{orgId.id}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="FlowDepart" >
		SELECT 
			<include refid="flowDepartColumns"/>
		FROM flow_depart a
		<include refid="flowDepartJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			${dataScope}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO flow_depart(
			id,
			flow_no,
			bill_type,
			orgid,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{flowNo},
			#{billType},
			#{orgId.id},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE flow_depart SET 	
			flow_no = #{flowNo},
			bill_type = #{billType},
			orgid = #{orgId.id},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM flow_depart
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE flow_depart SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="FlowDepart" statementType="STATEMENT">
		select * FROM flow_depart  where ${propertyName} = '${value}'
	</select>
	
</mapper>